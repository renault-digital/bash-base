name: cicd

# Run the workflow when a Pull Request is opened or when changes are pushed to master
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ master ]

jobs:
  lint-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: lint commit message of this pull request
        uses: wagoid/commitlint-github-action@v2

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install
        run: npm ci

      - name: shellcheck-shfmt
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      # Fetch the latest commit
      - name: Checkout
        uses: actions/checkout@v2

      # Run tests
      - name: shellspec-kcov
        run: docker run -i --rm -v "$(pwd)":/bash-base -w /bash-base shellspec/shellspec:0.27-kcov --kcov -f t spec/*.spec.sh

      - name: codecov.io
        run: bash <(curl -s https://codecov.io/bash)

      - name: failed if coverage not 100%
        run: |
          cat coverage/coverage.json
          percent=$(jq '.percent_covered|tonumber|floor' coverage/coverage.json)
          if (( $(echo "${percent} == 100" | bc -l) )); then
            echo "The coverage is OK."
            exit 0
          fi
          echo "The coverage should be 100%."
          exit 1

  semantic-release-preview:
    runs-on: ubuntu-latest
    # Waits for test jobs to complete
    needs: [lint-commit,lint,test]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install
        run: npm ci

      - name: semantic-release dry run to preview of the pending release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: npx semantic-release --dry-run

  semantic-release:
    # Only release on push to master
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    # Waits for test jobs to complete
    needs: [semantic-release-preview]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Install
        run: npm ci

      - name: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: npx semantic-release
